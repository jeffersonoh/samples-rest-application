server.port=7712
server.context-path=/oauth-backend-rest

### Resource Server ###

# UserInfo não exige autenticação do cliente, mas o server deve oferecer este serviço
#spring.oauth2.resource.userInfoUri=http://localhost:7710/oauth-server/oauth/user
#spring.oauth2.resource.preferTokenInfo=false

# TokenInfo pode exigir autenticação do cliente, dependendo da configuração do servidor
# Obs.: para funcionar deve ser definido as propriedades clientId e clientSecret
spring.oauth2.resource.tokenInfoUri=http://localhost:7710/oauth-server/oauth/check_token
spring.oauth2.client.clientId=client-key
spring.oauth2.client.clientSecret=client-secret

# Não usar os formatos de chave abaixo (não funciona) 
#spring.oauth2.client.client-id
#spring.oauth2.client.client-secret
#spring.oauth2.resource.user-info-uri
#spring.oauth2.resource.token-info-uri
#spring.oauth2.resource.prefer-token-info
 
### Token Relay para o Bouncer ###
#spring.oauth2.client.clientId=any-service
#spring.oauth2.client.authenticationScheme=form
#spring.oauth2.resource.userInfoUri=http://localhost:8080/bouncer-server/oauth2.0/profile
#spring.oauth2.resource.preferTokenInfo=false
